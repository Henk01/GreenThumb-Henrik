// <auto-generated />
using GreenThumb_Henrik.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenThumb_Henrik.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231206181055_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GardenModelPlantModel", b =>
                {
                    b.Property<int>("GardensId")
                        .HasColumnType("int");

                    b.Property<int>("PlantsId")
                        .HasColumnType("int");

                    b.HasKey("GardensId", "PlantsId");

                    b.HasIndex("PlantsId");

                    b.ToTable("GardenModelPlantModel");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.GardenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GardenModel");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.GardenPlantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GardenId")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GardenId");

                    b.HasIndex("PlantId");

                    b.ToTable("GardenPlantModel");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.InstructionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Give water"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Give sunlight"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Repot plant when its gotten bigger"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Distribute pesticide"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Monitor temperature and humidity"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Provide support so plant stays upright"
                        });
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.PlantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstructionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructionId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InstructionId = 1,
                            Name = "Oak"
                        },
                        new
                        {
                            Id = 2,
                            InstructionId = 2,
                            Name = "Dandelion"
                        },
                        new
                        {
                            Id = 3,
                            InstructionId = 3,
                            Name = "Venus Flytrap"
                        },
                        new
                        {
                            Id = 4,
                            InstructionId = 4,
                            Name = "Sunflower"
                        },
                        new
                        {
                            Id = 5,
                            InstructionId = 5,
                            Name = "Hemp"
                        },
                        new
                        {
                            Id = 6,
                            InstructionId = 6,
                            Name = "Barrel Cactus"
                        },
                        new
                        {
                            Id = 7,
                            InstructionId = 1,
                            Name = "Bamboo"
                        },
                        new
                        {
                            Id = 8,
                            InstructionId = 2,
                            Name = "Wheat"
                        },
                        new
                        {
                            Id = 9,
                            InstructionId = 3,
                            Name = "Spider Plant"
                        },
                        new
                        {
                            Id = 10,
                            InstructionId = 4,
                            Name = "Strawberry"
                        },
                        new
                        {
                            Id = 11,
                            InstructionId = 5,
                            Name = "Jade Plant"
                        },
                        new
                        {
                            Id = 12,
                            InstructionId = 6,
                            Name = "Banana"
                        });
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GardenModelPlantModel", b =>
                {
                    b.HasOne("GreenThumb_Henrik.Models.GardenModel", null)
                        .WithMany()
                        .HasForeignKey("GardensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenThumb_Henrik.Models.PlantModel", null)
                        .WithMany()
                        .HasForeignKey("PlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.GardenModel", b =>
                {
                    b.HasOne("GreenThumb_Henrik.Models.UserModel", "User")
                        .WithOne("Garden")
                        .HasForeignKey("GreenThumb_Henrik.Models.GardenModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.GardenPlantModel", b =>
                {
                    b.HasOne("GreenThumb_Henrik.Models.GardenModel", "Garden")
                        .WithMany("GardenPlants")
                        .HasForeignKey("GardenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenThumb_Henrik.Models.PlantModel", "Plant")
                        .WithMany("GardenPlants")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garden");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.PlantModel", b =>
                {
                    b.HasOne("GreenThumb_Henrik.Models.InstructionModel", "Instruction")
                        .WithMany("Plants")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instruction");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.GardenModel", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.InstructionModel", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.PlantModel", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("GreenThumb_Henrik.Models.UserModel", b =>
                {
                    b.Navigation("Garden")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
